{"ast":null,"code":"import _asyncToGenerator from \"C:/JOHN BRYCE/lessons/2021/07/16.07.21  \\u05DE\\u05D1\\u05D7\\u05DF/angularTask/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"@angular/router\";\nexport class TasksService {\n  constructor(apiService, route, nav) {\n    this.apiService = apiService;\n    this.route = route;\n    this.nav = nav;\n    this._customersARR = [];\n    this._tasksARR = [];\n    this.result = {}; //  `tasks`(`ID`, `Description`, `IsCompleted`,`createdAt`, `CustomerID`,'CustomerName' )\n\n    this._currentTask = {\n      ID: 0,\n      Description: '',\n      IsCompleted: 0,\n      createdAt: '',\n      CustomerID: 0\n    };\n  }\n\n  getCustomers(url) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this._customersARR = yield _this.apiService.createGetService(url);\n      console.log('_customersARR: ', _this._customersARR);\n\n      _this.getTasks('/tasks/getAllTasks');\n\n      _this.nav.navigate(['tasksList']);\n    })();\n  } // URL:   http://www.localhost:5004/customers/getAllCustomers\n\n\n  getTasks(url) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2._tasksARR = yield _this2.apiService.createGetService(url);\n      console.log('_tasksARR: ', _this2._tasksARR); // this.nav.navigate(['tasksList']);\n    })();\n  } // URL:   http://www.localhost:5004/tasks/getAllTasks\n\n\n  addWomanByUserID(url, userId) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3._womanNameInput === '' || _this3._dateOfBirthInput === '' || _this3._countryInput === '' || _this3._descriptionInput === '') {\n        alert('All fields must be provided');\n      } else {\n        let newWomanOB = {\n          WomanName: _this3._womanNameInput,\n          DateOfBirth: _this3._dateOfBirthInput,\n          Country: _this3._countryInput,\n          Description: _this3._descriptionInput,\n          UserID: userId\n        };\n        console.log('newWomanOB: ', newWomanOB);\n        _this3.result = yield _this3.apiService.createPostService(url, newWomanOB);\n        _this3._womanNameInput = '';\n        _this3._dateOfBirthInput = '';\n        _this3._countryInput = '';\n        _this3._descriptionInput = '';\n\n        _this3.getWomenByUserID(`/women/getWomenByUserID?UserID=${userId}`);\n\n        console.log('_womenARR WITH NEW: ', _this3._womenARR);\n\n        _this3.nav.navigate(['womenList']);\n      }\n    })();\n  }\n\n}\n\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.ActivatedRoute), i0.ɵɵinject(i2.Router));\n};\n\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\JOHN BRYCE\\lessons\\2021\\07\\16.07.21  מבחן\\angularTask\\client\\src\\app\\services\\tasks.service.ts"],"names":[],"mappings":";;;;AAQA,OAAM,MAAO,YAAP,CAAmB;AAavB,EAAA,WAAA,CACS,UADT,EAES,KAFT,EAGS,GAHT,EAGoB;AAFX,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,GAAA,GAAA,GAAA;AAfT,SAAA,aAAA,GAAiC,EAAjC;AACA,SAAA,SAAA,GAAyB,EAAzB;AACA,SAAA,MAAA,GAAc,EAAd,CAaoB,CAZpB;;AAEA,SAAA,YAAA,GAAoB;AAClB,MAAA,EAAE,EAAE,CADc;AAElB,MAAA,WAAW,EAAE,EAFK;AAGlB,MAAA,WAAW,EAAE,CAHK;AAIlB,MAAA,SAAS,EAAE,EAJO;AAKlB,MAAA,UAAU,EAAE;AALM,KAApB;AAWI;;AACE,EAAA,YAAY,CAAC,GAAD,EAAY;AAAA;;AAAA;AAC5B,MAAA,KAAI,CAAC,aAAL,SAA4B,KAAI,CAAC,UAAL,CAAgB,gBAAhB,CAC1B,GAD0B,CAA5B;AAGA,MAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,KAAI,CAAC,aAApC;;AACA,MAAA,KAAI,CAAC,QAAL,CAAc,oBAAd;;AACA,MAAA,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,CAAC,WAAD,CAAlB;AAN4B;AAO7B,GAzBsB,CA0BvB;;;AAEM,EAAA,QAAQ,CAAC,GAAD,EAAY;AAAA;;AAAA;AACxB,MAAA,MAAI,CAAC,SAAL,SAAwB,MAAI,CAAC,UAAL,CAAgB,gBAAhB,CACtB,GADsB,CAAxB;AAGA,MAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAAC,SAAhC,EAJwB,CAKxB;AALwB;AAMzB,GAlCsB,CAmCvB;;;AAEM,EAAA,gBAAgB,CAAC,GAAD,EAAc,MAAd,EAA6B;AAAA;;AAAA;AACjD,UACE,MAAI,CAAC,eAAL,KAAyB,EAAzB,IACA,MAAI,CAAC,iBAAL,KAA2B,EAD3B,IAEA,MAAI,CAAC,aAAL,KAAuB,EAFvB,IAGA,MAAI,CAAC,iBAAL,KAA2B,EAJ7B,EAKE;AACA,QAAA,KAAK,CAAC,6BAAD,CAAL;AACD,OAPD,MAOO;AACL,YAAI,UAAU,GAAG;AACf,UAAA,SAAS,EAAE,MAAI,CAAC,eADD;AAEf,UAAA,WAAW,EAAE,MAAI,CAAC,iBAFH;AAGf,UAAA,OAAO,EAAE,MAAI,CAAC,aAHC;AAIf,UAAA,WAAW,EAAE,MAAI,CAAC,iBAJH;AAKf,UAAA,MAAM,EAAE;AALO,SAAjB;AAQA,QAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,UAA5B;AACA,QAAA,MAAI,CAAC,MAAL,SAAqB,MAAI,CAAC,UAAL,CAAgB,iBAAhB,CACnB,GADmB,EAEnB,UAFmB,CAArB;AAIA,QAAA,MAAI,CAAC,eAAL,GAAuB,EAAvB;AACA,QAAA,MAAI,CAAC,iBAAL,GAAyB,EAAzB;AACA,QAAA,MAAI,CAAC,aAAL,GAAqB,EAArB;AACA,QAAA,MAAI,CAAC,iBAAL,GAAyB,EAAzB;;AACA,QAAA,MAAI,CAAC,gBAAL,CAAsB,kCAAkC,MAAM,EAA9D;;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,sBAAZ,EAAoC,MAAI,CAAC,SAAzC;;AACA,QAAA,MAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,CAAC,WAAD,CAAlB;AACD;AA7BgD;AA8BlD;;AAnEsB;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,I;AAAA,EAAA,UAAA,EAFX","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Customer, Task } from '../models/models';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TasksService {\n  _customersARR: Array<Customer> = [];\n  _tasksARR: Array<Task> = [];\n  result: any = {};\n  //  `tasks`(`ID`, `Description`, `IsCompleted`,`createdAt`, `CustomerID`,'CustomerName' )\n\n  _currentTask: any = {\n    ID: 0,\n    Description: '',\n    IsCompleted: 0,\n    createdAt: '',\n    CustomerID: 0,\n  };\n  constructor(\n    public apiService: ApiService,\n    public route: ActivatedRoute,\n    public nav: Router\n  ) {}\n  async getCustomers(url: string) {\n    this._customersARR = (await this.apiService.createGetService(\n      url\n    )) as Array<Customer>;\n    console.log('_customersARR: ', this._customersARR);\n    this.getTasks('/tasks/getAllTasks');\n    this.nav.navigate(['tasksList']);\n  }\n  // URL:   http://www.localhost:5004/customers/getAllCustomers\n\n  async getTasks(url: string) {\n    this._tasksARR = (await this.apiService.createGetService(\n      url\n    )) as Array<Task>;\n    console.log('_tasksARR: ', this._tasksARR);\n    // this.nav.navigate(['tasksList']);\n  }\n  // URL:   http://www.localhost:5004/tasks/getAllTasks\n\n  async addWomanByUserID(url: string, userId?: number) {\n    if (\n      this._womanNameInput === '' ||\n      this._dateOfBirthInput === '' ||\n      this._countryInput === '' ||\n      this._descriptionInput === ''\n    ) {\n      alert('All fields must be provided');\n    } else {\n      let newWomanOB = {\n        WomanName: this._womanNameInput,\n        DateOfBirth: this._dateOfBirthInput,\n        Country: this._countryInput,\n        Description: this._descriptionInput,\n        UserID: userId,\n      };\n\n      console.log('newWomanOB: ', newWomanOB);\n      this.result = (await this.apiService.createPostService(\n        url,\n        newWomanOB\n      )) as any;\n      this._womanNameInput = '';\n      this._dateOfBirthInput = '';\n      this._countryInput = '';\n      this._descriptionInput = '';\n      this.getWomenByUserID(`/women/getWomenByUserID?UserID=${userId}`);\n      console.log('_womenARR WITH NEW: ', this._womenARR);\n      this.nav.navigate(['womenList']);\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}