{"ast":null,"code":"import _asyncToGenerator from \"C:/JOHN BRYCE/lessons/2021/07/16.07.21  \\u05DE\\u05D1\\u05D7\\u05DF/angularTask/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./women.service\";\nimport * as i2 from \"./api.service\";\nimport * as i3 from \"@angular/router\";\nexport class UsersService {\n  constructor(womenService, apiService, route, nav) {\n    this.womenService = womenService;\n    this.apiService = apiService;\n    this.route = route;\n    this.nav = nav;\n    this._currentUser = [];\n    this._isAuthenticated = false;\n    this._emailInput = '';\n    this._PWDInput = '';\n    this._currentUserID = 0;\n    this.result = {}; // url:  http://www.localhost:5004/users/getUserByEmail?Email='zoe@gmail.com'&Password='111'\n    // isAuthenticated = () => {\n    //   this._isAuthenticated\n    //     ? (this._isAuthenticated = false)\n    //     : (this._isAuthenticated = true);\n    //   console.log('_isAuthenticated Now', this._isAuthenticated);\n    // };\n\n    this.isAuthenticated = () => {\n      if (this._isAuthenticated) {\n        this._isAuthenticated = false;\n        this.nav.navigate(['']);\n        this._currentUser = [];\n      } else {\n        this.nav.navigate(['forms/logIn']);\n        this._isAuthenticated = true;\n      }\n\n      console.log('_isAuthenticated Now', this._isAuthenticated);\n    };\n  }\n\n  getUserByEmail(url) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this._PWDInput === '' || _this._emailInput === '') {\n        alert('Please enter email and password');\n      } else {\n        _this._currentUser = yield _this.apiService.createGetService(`${url}?Email=${_this._emailInput}&Password=${_this._PWDInput}`);\n        console.log('_currentUser: ', _this._currentUser);\n        _this._currentUserID = _this._currentUser[0].ID;\n\n        _this.womenService.getWomenByUserID(`/women/getWomenByUserID?UserID=${_this._currentUser[0].ID}`);\n\n        _this.nav.navigate(['womenList']);\n      }\n    })();\n  }\n\n}\n\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.WomenService), i0.ɵɵinject(i2.ApiService), i0.ɵɵinject(i3.ActivatedRoute), i0.ɵɵinject(i3.Router));\n};\n\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\JOHN BRYCE\\lessons\\2021\\07\\16.07.21  מבחן\\angularTask\\client\\src\\app\\services\\users.service.ts"],"names":[],"mappings":";;;;;AASA,OAAM,MAAO,YAAP,CAAmB;AAOvB,EAAA,WAAA,CACS,YADT,EAES,UAFT,EAGS,KAHT,EAIS,GAJT,EAIoB;AAHX,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,GAAA,GAAA,GAAA;AAVT,SAAA,YAAA,GAA4B,EAA5B;AACA,SAAA,gBAAA,GAA4B,KAA5B;AACA,SAAA,WAAA,GAAsB,EAAtB;AACA,SAAA,SAAA,GAAoB,EAApB;AACA,SAAA,cAAA,GAAyB,CAAzB;AACA,SAAA,MAAA,GAAc,EAAd,CAKoB,CAkBpB;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAAA,eAAA,GAAkB,MAAK;AACrB,UAAI,KAAK,gBAAT,EAA2B;AACzB,aAAK,gBAAL,GAAwB,KAAxB;AACA,aAAK,GAAL,CAAS,QAAT,CAAkB,CAAC,EAAD,CAAlB;AACA,aAAK,YAAL,GAAoB,EAApB;AACD,OAJD,MAIO;AACL,aAAK,GAAL,CAAS,QAAT,CAAkB,CAAC,aAAD,CAAlB;AACA,aAAK,gBAAL,GAAwB,IAAxB;AACD;;AACD,MAAA,OAAO,CAAC,GAAR,CAAY,sBAAZ,EAAoC,KAAK,gBAAzC;AACD,KAVD;AA3BI;;AAEE,EAAA,cAAc,CAAC,GAAD,EAAY;AAAA;;AAAA;AAC9B,UAAI,KAAI,CAAC,SAAL,KAAmB,EAAnB,IAAyB,KAAI,CAAC,WAAL,KAAqB,EAAlD,EAAsD;AACpD,QAAA,KAAK,CAAC,iCAAD,CAAL;AACD,OAFD,MAEO;AACL,QAAA,KAAI,CAAC,YAAL,SAA2B,KAAI,CAAC,UAAL,CAAgB,gBAAhB,CACzB,GAAG,GAAG,UAAU,KAAI,CAAC,WAAW,aAAa,KAAI,CAAC,SAAS,EADlC,CAA3B;AAGA,QAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ,EAA8B,KAAI,CAAC,YAAnC;AACA,QAAA,KAAI,CAAC,cAAL,GAAsB,KAAI,CAAC,YAAL,CAAkB,CAAlB,EAAqB,EAA3C;;AACA,QAAA,KAAI,CAAC,YAAL,CAAkB,gBAAlB,CACE,kCAAkC,KAAI,CAAC,YAAL,CAAkB,CAAlB,EAAqB,EAAE,EAD3D;;AAGA,QAAA,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,CAAC,WAAD,CAAlB;AACD;AAb6B;AAc/B;;AA5BsB;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,YAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,I;AAAA,EAAA,UAAA,EAFX","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../models/models';\nimport { ApiService } from './api.service';\nimport { WomenService } from './women.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  _currentUser: Array<User> = [];\n  _isAuthenticated: boolean = false;\n  _emailInput: string = '';\n  _PWDInput: string = '';\n  _currentUserID: number = 0;\n  result: any = {};\n  constructor(\n    public womenService: WomenService,\n    public apiService: ApiService,\n    public route: ActivatedRoute,\n    public nav: Router\n  ) {}\n\n  async getUserByEmail(url: string) {\n    if (this._PWDInput === '' || this._emailInput === '') {\n      alert('Please enter email and password');\n    } else {\n      this._currentUser = (await this.apiService.createGetService(\n        `${url}?Email=${this._emailInput}&Password=${this._PWDInput}`\n      )) as Array<User>;\n      console.log('_currentUser: ', this._currentUser);\n      this._currentUserID = this._currentUser[0].ID;\n      this.womenService.getWomenByUserID(\n        `/women/getWomenByUserID?UserID=${this._currentUser[0].ID}`\n      );\n      this.nav.navigate(['womenList']);\n    }\n  }\n  // url:  http://www.localhost:5004/users/getUserByEmail?Email='zoe@gmail.com'&Password='111'\n\n  // isAuthenticated = () => {\n  //   this._isAuthenticated\n  //     ? (this._isAuthenticated = false)\n  //     : (this._isAuthenticated = true);\n\n  //   console.log('_isAuthenticated Now', this._isAuthenticated);\n  // };\n\n  isAuthenticated = () => {\n    if (this._isAuthenticated) {\n      this._isAuthenticated = false;\n      this.nav.navigate(['']);\n      this._currentUser = [];\n    } else {\n      this.nav.navigate(['forms/logIn']);\n      this._isAuthenticated = true;\n    }\n    console.log('_isAuthenticated Now', this._isAuthenticated);\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}